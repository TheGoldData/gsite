buildscript {
    repositories {
        mavenLocal()
maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public'
    }


        maven { url "http://dl.bintray.com/stefanogualdi/plugins" }
        jcenter()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.energizedwork:idea-gradle-plugins:1.4"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.6"
        classpath 'net.sf.proguard:proguard-gradle:5.2.1'
    }
}

apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

repositories {

    mavenLocal()
 maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public'
    }

    maven { url "http://dl.bintray.com/stefanogualdi/plugins" }
    jcenter()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url 'http://repo.spring.io/libs-release' }
}
configurations {
    all*.exclude group:'org.grails',module:'grails-gsp'
    all*.exclude group:'org.grails',module:'grails-web-gsp'
}
dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
//    compile "org.grails:grails-plugin-i18n"
//    compile "com.100shouhou.org.grails:grails-plugin-i18n:3.3.2"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.6"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.7'

    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    compile group: 'com.google.guava', name: 'guava', version: '24.1-jre'
    compile group: 'us.fatehi', name: 'schemacrawler', version: '14.20.05'

    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.4.5'
    compile group: 'javax.mail', name: 'mail', version: '1.4.5'
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    compile 'org.apache.shiro:shiro-spring:1.2.3'
    compile 'commons-net:commons-net:3.3'
    compile "org.grails.plugins:quartz:2.0.13"
    compile 'org.apache.poi:poi:3.8'
    compile 'org.apache.poi:poi-ooxml:3.8'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
    compile 'com.vividsolutions:jts:1.13'
    compile 'org.hjson:hjson:1.0.0'
//    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.3'
    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.16.1'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.9'

    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.11'

    compile group: 'p6spy', name: 'p6spy', version: '3.8.2'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    compile group: 'com.ibm.icu', name: 'icu4j', version: '61.1'
    compile 'io.github.http-builder-ng:http-builder-ng-apache:1.0.3'
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile 'org.hibernate:hibernate-entitymanager:5.1.5.Final'
    compile 'org.hibernate:hibernate-spatial:5.1.5.Final'
    compile group: 'dom4j', name: 'dom4j', version: '1.6.1'
    compile(group: 'jaxen', name: 'jaxen', version: '1.1-beta-6') {
        exclude(group: 'xom', module: 'xom')
        exclude(group: 'xerces')
        exclude(group: 'dom4j')
        exclude(group: 'jdom')
    }
    compile "org.grails:grails-taglib:$grailsVersion"
    compile "org.grails:grails-web-taglib:$grailsVersion"
    compile group: 'com.github.lookfirst', name: 'sardine', version: '5.8'
    compile group: 'com.jcraft', name: 'jsch', version: '0.1.55'
    compile fileTree(include: '*.jar',dir:'libs/')

}

bootRun {
    jvmArgs("-Dspring.output.ansi.enabled=always","-Dtheme=${theme}")

    addResources = true
}


assets {
    minifyJs = false
    minifyCss = false
}
def themes=new File('./grails-app/views/themes').list(new FilenameFilter() {
    @Override
    boolean accept(File dir, String name) {
        if(!name.endsWith('plist')){
            return true
        }
        return false
    }
})

assets{
    excludes=themes.findAll { !it.equals("${theme}".toString())}.collect {"${it}/**"}
}


compileGroovyPages {
    source ="$buildDir/groovyPages"
}
sourceSets   {
    main{

        resources{
            themes.findAll { !it.equals("${theme}".toString())}.collect {"themes/${it}"}.each {String ss->
                exclude(ss)
            }
        }
    }
}

task createWrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
task runGroovyScript( type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'groovy.ui.GroovyMain'
    args "theme.groovy","grails-app/views/themes/${theme}"
}
runGroovyScript.doLast{
    copy {
        from("grails-app/views/themes/${theme}/theme.json")
        into("$buildDir/resources/main/themes/${theme}/")
    }
}
assetCompile.dependsOn(runGroovyScript)
bootRun.dependsOn(runGroovyScript)
